{
  "name": "nestjs-template",
  "version": "1.0.0",
  "description": "",
  "author": "webenot",
  "private": false,
  "license": "MIT",
  "engines": {
    "node": "20.19.x"
  },
  "scripts": {
    "init": "bash scripts/app-init.sh",
    "prebuild": "rimraf build",
    "build": "nest build",
    "format": "prettier --write \"src/**/*.ts\" \"test/**/*.ts\"",
    "start": "nest start",
    "repl": "npm run start -- --entryFile repl",
    "start:dev": "nest start --watch",
    "start:debug": "nest start --debug --watch",
    "start:prod": "node build/main",
    "lint": "eslint \"{src,apps,libs,test}/**/*.ts\" --quiet",
    "test": "jest --passWithNoTests",
    "test:watch": "jest --watch",
    "test:cov": "jest --coverage",
    "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "test:e2e": "jest --config ./test/jest-e2e.json",
    "typeorm": "node --require dotenv/config -r tsconfig-paths/register ./node_modules/typeorm/cli-ts-node-commonjs.js",
    "typeorm:generate": "bash scripts/postgresql/migration-generate.sh",
    "typeorm:create": "bash scripts/postgresql/migration-create.sh",
    "typeorm:run": "bash scripts/postgresql/migration-run.sh",
    "typeorm:revert": "bash scripts/postgresql/migration-revert.sh",
    "mongodb": "ts-node -P tsconfig.json node_modules/migrate-mongo/bin/migrate-mongo.js",
    "mongodb:create": "bash scripts/mongodb/migration-create.sh",
    "mongodb:run": "bash scripts/mongodb/migration-run.sh",
    "mongodb:revert": "bash scripts/mongodb/migration-revert.sh"
  },
  "dependencies": {
    "@golevelup/nestjs-rabbitmq": "^6.0.1",
    "@nestjs/bull": "^11.0.2",
    "@nestjs/cache-manager": "^3.0.1",
    "@nestjs/cli": "^11.0.7",
    "@nestjs/common": "^11.1.3",
    "@nestjs/config": "^4.0.2",
    "@nestjs/core": "^11.1.3",
    "@nestjs/mongoose": "^11.0.3",
    "@nestjs/platform-express": "^11.1.3",
    "@nestjs/swagger": "^11.2.0",
    "@nestjs/typeorm": "11.0.0",
    "bignumber.js": "^9.3.0",
    "body-parser": "^2.2.0",
    "bull": "^4.16.5",
    "cache-manager": "^6.4.3",
    "cache-manager-ioredis": "^2.1.0",
    "class-transformer": "^0.5.1",
    "class-validator": "^0.14.2",
    "date-fns": "^4.1.0",
    "dotenv": "^16.5.0",
    "ioredis": "^5.6.1",
    "lodash": "^4.17.21",
    "mongoose": "^8.15.1",
    "nestjs-typeorm-paginate": "^4.1.0",
    "pg": "^8.16.0",
    "pino": "^9.7.0",
    "pino-pretty": "^13.0.0",
    "reflect-metadata": "^0.2.2",
    "rimraf": "^6.0.1",
    "rxjs": "^7.8.2",
    "swagger-ui-express": "^5.0.1",
    "typeorm": "^0.3.24"
  },
  "devDependencies": {
    "@darraghor/eslint-plugin-nestjs-typed": "^5.0.14",
    "@faker-js/faker": "^9.8.0",
    "@nestjs/schematics": "^11.0.5",
    "@nestjs/testing": "^11.1.3",
    "@types/amqplib": "^0.10.7",
    "@types/body-parser": "^1.19.6",
    "@types/cache-manager-ioredis": "^2.0.7",
    "@types/express": "^5.0.3",
    "@types/jest": "^29.5.14",
    "@types/lodash": "^4.17.17",
    "@types/node": "^22.15.30",
    "@types/supertest": "^6.0.3",
    "@typescript-eslint/eslint-plugin": "^7.16.1",
    "@typescript-eslint/parser": "^7.16.1",
    "@typescript-eslint/types": "^8.33.1",
    "eslint-config-prettier": "^9.1.0",
    "eslint-import-resolver-typescript": "^4.4.3",
    "eslint-plugin-import": "^2.29.1",
    "eslint-plugin-prettier": "^5.1.3",
    "eslint-plugin-security": "^1.7.1",
    "eslint-plugin-simple-import-sort": "^12.0.0",
    "eslint-plugin-unicorn": "^54.0.0",
    "eslint-plugin-vtex": "^2.2.1",
    "husky": "^9.1.7",
    "jest": "^29.7.0",
    "prettier": "^3.5.3",
    "source-map-support": "^0.5.21",
    "supertest": "^7.1.1",
    "ts-jest": "^29.3.4",
    "ts-loader": "^9.5.2",
    "ts-node": "^10.9.2",
    "tsconfig-paths": "^4.2.0",
    "typescript": "^5.5.3"
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": "src",
    "testRegex": ".*\\.spec\\.ts$",
    "verbose": true,
    "transform": {
      "^.+\\.(t|j)s$": [
        "ts-jest",
        {
          "tsconfig": "tsconfig.spec.json"
        }
      ]
    },
    "collectCoverageFrom": [
      "**/*.(t|j)s"
    ],
    "coverageDirectory": "../coverage",
    "testEnvironment": "node",
    "moduleNameMapper": {
      "^~/(.*)": "<rootDir>/$1"
    }
  }
}
